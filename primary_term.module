<?php

// $Id$

/**
 * @TODO
 * - add a validate function to the form_alter and add taxonomy terms in nodeapi('submit')?
 */

function primary_term_nodeapi(&$node, $op, $teaser, $page){
  switch ($op){
    case 'insert':
    case 'update':
      db_query('DELETE FROM {primary_term} WHERE vid = %d', $node->vid); // only one term per node revision
      // when node form is submitted, the new PT comes in the $form['taxonomy array']. blame fapi.
      $primaryterm = isset($node->taxonomy['primaryterm']) ? $node->taxonomy['primaryterm'] : $node->primaryterm;
      if (!isset($primaryterm) || !$primaryterm) {
        break;
      }

      db_query('INSERT INTO {primary_term} (vid, tid) VALUES (%d, %d)', $node->vid, $primaryterm);
      
      // TODO: technically, this should data should be prepared in nodeapi('submit') and then let taxonomy save the terms. that assures that modules that listen on nodeapi insert/update receive proper data
      // make sure that this term is also in the taxonomy table (even if it wasn't selected in the taxonomy form)
      db_query('DELETE FROM {term_node} WHERE nid = %d AND tid = %d', $node->vid, $primaryterm); // prevent duplicates
      db_query('INSERT INTO {term_node} (nid, tid) VALUES (%d, %d)', $node->vid, $primaryterm);     
      break;
    
    case 'load':
      $tid = db_result(db_query('SELECT tid FROM {primary_term} WHERE vid = %d', $node->vid));
      $term = taxonomy_get_term($tid);
      $node->primary_term = $term;
  }
}

function primary_term_form_alter($form_id, &$form) { 
  $type = $form['type']['#value'];
  $node = $form['#node'];

  switch ($form_id) {
    case $type .'_node_form':
  
      if ($vids = variable_get('pt_vocabs_'. $form['type']['#value'], array())) {
        
        // go through all taxonomy terms for this type:
        $terms = array();
        if(is_array($form['taxonomy'])){
          foreach($form['taxonomy'] as $vid => $vocab){
            if(in_array($vid, $vids)){
              if(is_array($vocab['#options'])){
                if(strlen(trim($vocab['#options']))){
                  // not sure why we have the line below. from old days.
                  // unset($vocab['#options'][0]);
                }
                $terms = $terms + $vocab['#options'];
              }
            }
          }
        }
        
        // stick a <none> value on the front of the array
        array_unshift($terms, t('<none>'));
        $types = node_get_types('names');
        $type = $types[$node->type];
        
        // create a new field
        $form['taxonomy']['primaryterm'] = array(
          '#type' => 'select',
          '#multiple' => 0,
          '#title' => t('Primary Category'),
          '#default_value' => array(primary_term_get_term($form['#node']->vid)),
          '#options' => $terms,
          '#description' => t('Select a primary category for this %type.', array('%type' => $type)),
          '#theme' => 'taxonomy_term_select',
          '#required' => FALSE,
          '#weight' => -4,
          '#tree' => FALSE, // keep value out of $node->taxonomy
          );
      }
      break;
  
  
  case 'node_type_form':
    $node_type = $form['old_type']['#value'];
    $vocabs = taxonomy_get_vocabularies($type);
    foreach($vocabs as $vocab){
      $vocabularies[$vocab->vid] = $vocab->name;
    }
    
    $form['workflow']['pt_vocabs'] = array(
      '#type' => 'checkboxes',
      '#title' => t('Vocabularies for Primary Term'),
      '#options' => $vocabularies,
      '#default_value' => variable_get('pt_vocabs_'. $node_type, array()),
      '#description' => t('Select which vocabularies should contribute terms to the Primary Category selector. Select none and the selector will not appear.'),
    );
    
    
    
  }  
}

/**
 * Get primary term for a given node version id (vid)
 *
 * @param integer $vid
 */
function primary_term_get_term($vid){
  return db_result(db_query('SELECT tid FROM primary_term WHERE vid = %d', $vid));
}